{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\Intern\\\\copy2\\\\demo\\\\src\\\\components\\\\InsuranceForms\\\\Property.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import './PropertyForm.css'; // Your custom CSS file\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap CSS\n// import { Link } from 'react-router-dom';\n\n// function PropertyForm() {\n//   // State variables for structure details\n//   const [currentMarketValue, setCurrentMarketValue] = useState('');\n//   const [carpetArea, setCarpetArea] = useState('');\n//   const [pincode, setPincode] = useState('');\n//   const [buildingAge, setBuildingAge] = useState('');\n//   const [propertyEffect, setPropertyEffect] = useState('No');\n\n//   // State variables for security measures\n//   const [security24x7, setSecurity24x7] = useState('No');\n//   const [isSalaried, setIsSalaried] = useState('No');\n\n//   // State variable for tracking validation errors\n//   const [validationErrors, setValidationErrors] = useState({});\n\n//   // Regex pattern for numeric input\n//   const numericRegex = /^\\d+$/;\n\n//   // Proceed button click handler\n//   const handleProceed = () => {\n//     // Validation check for empty input values and numeric format\n//     const errors = {};\n//     if (!currentMarketValue || !numericRegex.test(currentMarketValue)) {\n//       errors.currentMarketValue = 'Enter a valid number';\n//     }\n//     if (!carpetArea || !numericRegex.test(carpetArea)) {\n//       errors.carpetArea = 'Enter a valid number';\n//     }\n//     if (!pincode || !numericRegex.test(pincode)) {\n//       errors.pincode = 'Enter a valid number';\n//     }\n\n//     if (Object.keys(errors).length > 0) {\n//       // Set validation errors and prevent further action\n//       setValidationErrors(errors);\n//       return;\n//     }\n\n//     // Continue with further actions or submit the form\n//     console.log('Form submitted:', {\n//       currentMarketValue,\n//       carpetArea,\n//       pincode,\n//       buildingAge,\n//       propertyEffect,\n//       security24x7,\n//       isSalaried,\n//     });\n//   };\n\n//   return (\n//     <div className=\"form-container \">\n//       <h2>Structure Details</h2>\n\n//       <form className=\"form-container container\">\n//         <div className={`form-group ${validationErrors.currentMarketValue ? 'has-error' : ''}`}>\n//           <label>Current Market Value of Property:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={currentMarketValue}\n//             onChange={(e) => {\n//               setCurrentMarketValue(e.target.value);\n//               setValidationErrors({ ...validationErrors, currentMarketValue: '' });\n//             }}\n//           />\n//           {validationErrors.currentMarketValue && (\n//             <small className=\"error-text\">{validationErrors.currentMarketValue}</small>\n//           )}\n//         </div>\n\n//         <div className={`form-group ${validationErrors.carpetArea ? 'has-error' : ''}`}>\n//           <label>Carpet Area/sq.ft:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={carpetArea}\n//             onChange={(e) => {\n//               setCarpetArea(e.target.value);\n//               setValidationErrors({ ...validationErrors, carpetArea: '' });\n//             }}\n//           />\n//           {validationErrors.carpetArea && (\n//             <small className=\"error-text\">{validationErrors.carpetArea}</small>\n//           )}\n//         </div>\n\n//         <div className={`form-group ${validationErrors.pincode ? 'has-error' : ''}`}>\n//           <label>Enter Pincode:</label>\n//           <input\n//             type=\"text\"\n//             className=\"form-control\"\n//             value={pincode}\n//             onChange={(e) => {\n//               setPincode(e.target.value);\n//               setValidationErrors({ ...validationErrors, pincode: '' });\n//             }}\n//           />\n//           {validationErrors.pincode && (\n//             <small className=\"error-text\">{validationErrors.pincode}</small>\n//           )}\n//         </div>\n\n//         <div className={`form-group ${validationErrors.buildingAge ? 'has-error' : ''}`}>\n//           <label>Age of Building:</label>\n//           <select\n//             className=\"form-control\"\n//             value={buildingAge}\n//             onChange={(e) => setBuildingAge(e.target.value)}\n//           >\n//             {[0, 5, 10, 15, 20, 25].map((years) => (\n//               <option key={years} value={years}>\n//                 {`${years}-${years + 5} years`}\n//               </option>\n//             ))}\n//           </select>\n//         </div>\n\n//         <div className={`form-group ${validationErrors.propertyEffect ? 'has-error' : ''}`}>\n//           <label>Has your property been affected by floods/earthquake in the past 5 years:</label>\n//           <select\n//             className=\"form-control\"\n//             value={propertyEffect}\n//             onChange={(e) => setPropertyEffect(e.target.value)}\n//           >\n//             <option value=\"Yes\">Yes</option>\n//             <option value=\"No\">No</option>\n//           </select>\n//         </div>\n\n//         {/* Rest of your form inputs ... */}\n//       </form>\n\n//       <h2>Security Measures</h2>\n\n//       <form className=\"form-container container\">\n//         <div className={`form-group ${validationErrors.security24x7 ? 'has-error' : ''}`}>\n//           <label>24*7 Security:</label>\n//           <select\n//             className=\"form-control\"\n//             value={security24x7}\n//             onChange={(e) => setSecurity24x7(e.target.value)}\n//           >\n//             <option value=\"Yes\">Yes</option>\n//             <option value=\"No\">No</option>\n//           </select>\n//         </div>\n\n//         <div className={`form-group ${validationErrors.isSalaried ? 'has-error' : ''}`}>\n//           <label>Are you a salaried individual?:</label>\n//           <select\n//             className=\"form-control\"\n//             value={isSalaried}\n//             onChange={(e) => setIsSalaried(e.target.value)}\n//           >\n//             <option value=\"Yes\">Yes</option>\n//             <option value=\"No\">No</option>\n//           </select>\n//         </div>\n//       </form>\n\n//       <div className=\"form-control container\">\n//         <button className=\"btn btn-primary\" onClick={handleProceed}>\n//           Calculate\n//         </button>\n//         <Link to=\"/formPage\" className=\"btn btn-primary proceed-link ml-4\">\n//           Proceed to Payment\n//         </Link>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default PropertyForm;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isValidUsername, setIsValidUsername] = useState(true);\n  const [isValidPassword, setIsValidPassword] = useState(true);\n  const handleUsernameChange = e => {\n    const input = e.target.value;\n    setUsername(input);\n\n    // Regular expression to check if the username contains only alphanumeric characters\n    const usernameRegex = /^[a-zA-Z0-9]+$/;\n    setIsValidUsername(usernameRegex.test(input));\n  };\n  const handlePasswordChange = e => {\n    const input = e.target.value;\n    setPassword(input);\n\n    // Regular expression to check if the password contains at least 8 characters, including letters and numbers\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d).{8,}$/;\n    setIsValidPassword(passwordRegex.test(input));\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if both username and password are valid before further processing\n    if (isValidUsername && isValidPassword) {\n      // Perform login logic here\n      console.log('Login successful!');\n    } else {\n      console.log('Invalid credentials. Please check your username and password.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-group ${isValidUsername ? '' : 'has-error'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: handleUsernameChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), !isValidUsername && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"error-message\",\n          children: \"Username must contain only alphanumeric characters.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `form-group ${isValidPassword ? '' : 'has-error'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: handlePasswordChange,\n          className: \"form-control\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), !isValidPassword && /*#__PURE__*/_jsxDEV(\"small\", {\n          className: \"error-message\",\n          children: \"Password must be at least 8 characters long and include letters and numbers.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"lhK/A8xHVOaX2BYBKzvEWk64SrA=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","_s","username","setUsername","password","setPassword","isValidUsername","setIsValidUsername","isValidPassword","setIsValidPassword","handleUsernameChange","e","input","target","value","usernameRegex","test","handlePasswordChange","passwordRegex","handleSubmit","preventDefault","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/vijay/OneDrive/Desktop/Intern/copy2/demo/src/components/InsuranceForms/Property.js"],"sourcesContent":["// import React, { useState } from 'react';\r\n// import './PropertyForm.css'; // Your custom CSS file\r\n// import 'bootstrap/dist/css/bootstrap.min.css'; // Bootstrap CSS\r\n// import { Link } from 'react-router-dom';\r\n\r\n// function PropertyForm() {\r\n//   // State variables for structure details\r\n//   const [currentMarketValue, setCurrentMarketValue] = useState('');\r\n//   const [carpetArea, setCarpetArea] = useState('');\r\n//   const [pincode, setPincode] = useState('');\r\n//   const [buildingAge, setBuildingAge] = useState('');\r\n//   const [propertyEffect, setPropertyEffect] = useState('No');\r\n\r\n//   // State variables for security measures\r\n//   const [security24x7, setSecurity24x7] = useState('No');\r\n//   const [isSalaried, setIsSalaried] = useState('No');\r\n\r\n//   // State variable for tracking validation errors\r\n//   const [validationErrors, setValidationErrors] = useState({});\r\n\r\n//   // Regex pattern for numeric input\r\n//   const numericRegex = /^\\d+$/;\r\n\r\n//   // Proceed button click handler\r\n//   const handleProceed = () => {\r\n//     // Validation check for empty input values and numeric format\r\n//     const errors = {};\r\n//     if (!currentMarketValue || !numericRegex.test(currentMarketValue)) {\r\n//       errors.currentMarketValue = 'Enter a valid number';\r\n//     }\r\n//     if (!carpetArea || !numericRegex.test(carpetArea)) {\r\n//       errors.carpetArea = 'Enter a valid number';\r\n//     }\r\n//     if (!pincode || !numericRegex.test(pincode)) {\r\n//       errors.pincode = 'Enter a valid number';\r\n//     }\r\n\r\n//     if (Object.keys(errors).length > 0) {\r\n//       // Set validation errors and prevent further action\r\n//       setValidationErrors(errors);\r\n//       return;\r\n//     }\r\n\r\n//     // Continue with further actions or submit the form\r\n//     console.log('Form submitted:', {\r\n//       currentMarketValue,\r\n//       carpetArea,\r\n//       pincode,\r\n//       buildingAge,\r\n//       propertyEffect,\r\n//       security24x7,\r\n//       isSalaried,\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"form-container \">\r\n//       <h2>Structure Details</h2>\r\n\r\n//       <form className=\"form-container container\">\r\n//         <div className={`form-group ${validationErrors.currentMarketValue ? 'has-error' : ''}`}>\r\n//           <label>Current Market Value of Property:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={currentMarketValue}\r\n//             onChange={(e) => {\r\n//               setCurrentMarketValue(e.target.value);\r\n//               setValidationErrors({ ...validationErrors, currentMarketValue: '' });\r\n//             }}\r\n//           />\r\n//           {validationErrors.currentMarketValue && (\r\n//             <small className=\"error-text\">{validationErrors.currentMarketValue}</small>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className={`form-group ${validationErrors.carpetArea ? 'has-error' : ''}`}>\r\n//           <label>Carpet Area/sq.ft:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={carpetArea}\r\n//             onChange={(e) => {\r\n//               setCarpetArea(e.target.value);\r\n//               setValidationErrors({ ...validationErrors, carpetArea: '' });\r\n//             }}\r\n//           />\r\n//           {validationErrors.carpetArea && (\r\n//             <small className=\"error-text\">{validationErrors.carpetArea}</small>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className={`form-group ${validationErrors.pincode ? 'has-error' : ''}`}>\r\n//           <label>Enter Pincode:</label>\r\n//           <input\r\n//             type=\"text\"\r\n//             className=\"form-control\"\r\n//             value={pincode}\r\n//             onChange={(e) => {\r\n//               setPincode(e.target.value);\r\n//               setValidationErrors({ ...validationErrors, pincode: '' });\r\n//             }}\r\n//           />\r\n//           {validationErrors.pincode && (\r\n//             <small className=\"error-text\">{validationErrors.pincode}</small>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className={`form-group ${validationErrors.buildingAge ? 'has-error' : ''}`}>\r\n//           <label>Age of Building:</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             value={buildingAge}\r\n//             onChange={(e) => setBuildingAge(e.target.value)}\r\n//           >\r\n//             {[0, 5, 10, 15, 20, 25].map((years) => (\r\n//               <option key={years} value={years}>\r\n//                 {`${years}-${years + 5} years`}\r\n//               </option>\r\n//             ))}\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className={`form-group ${validationErrors.propertyEffect ? 'has-error' : ''}`}>\r\n//           <label>Has your property been affected by floods/earthquake in the past 5 years:</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             value={propertyEffect}\r\n//             onChange={(e) => setPropertyEffect(e.target.value)}\r\n//           >\r\n//             <option value=\"Yes\">Yes</option>\r\n//             <option value=\"No\">No</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         {/* Rest of your form inputs ... */}\r\n//       </form>\r\n\r\n//       <h2>Security Measures</h2>\r\n\r\n//       <form className=\"form-container container\">\r\n//         <div className={`form-group ${validationErrors.security24x7 ? 'has-error' : ''}`}>\r\n//           <label>24*7 Security:</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             value={security24x7}\r\n//             onChange={(e) => setSecurity24x7(e.target.value)}\r\n//           >\r\n//             <option value=\"Yes\">Yes</option>\r\n//             <option value=\"No\">No</option>\r\n//           </select>\r\n//         </div>\r\n\r\n//         <div className={`form-group ${validationErrors.isSalaried ? 'has-error' : ''}`}>\r\n//           <label>Are you a salaried individual?:</label>\r\n//           <select\r\n//             className=\"form-control\"\r\n//             value={isSalaried}\r\n//             onChange={(e) => setIsSalaried(e.target.value)}\r\n//           >\r\n//             <option value=\"Yes\">Yes</option>\r\n//             <option value=\"No\">No</option>\r\n//           </select>\r\n//         </div>\r\n//       </form>\r\n\r\n//       <div className=\"form-control container\">\r\n//         <button className=\"btn btn-primary\" onClick={handleProceed}>\r\n//           Calculate\r\n//         </button>\r\n//         <Link to=\"/formPage\" className=\"btn btn-primary proceed-link ml-4\">\r\n//           Proceed to Payment\r\n//         </Link>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PropertyForm;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\n\r\nfunction LoginPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isValidUsername, setIsValidUsername] = useState(true);\r\n  const [isValidPassword, setIsValidPassword] = useState(true);\r\n\r\n  const handleUsernameChange = (e) => {\r\n    const input = e.target.value;\r\n    setUsername(input);\r\n\r\n    // Regular expression to check if the username contains only alphanumeric characters\r\n    const usernameRegex = /^[a-zA-Z0-9]+$/;\r\n    setIsValidUsername(usernameRegex.test(input));\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    const input = e.target.value;\r\n    setPassword(input);\r\n\r\n    // Regular expression to check if the password contains at least 8 characters, including letters and numbers\r\n    const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\\d).{8,}$/;\r\n    setIsValidPassword(passwordRegex.test(input));\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if both username and password are valid before further processing\r\n    if (isValidUsername && isValidPassword) {\r\n      // Perform login logic here\r\n      console.log('Login successful!');\r\n    } else {\r\n      console.log('Invalid credentials. Please check your username and password.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={`form-group ${isValidUsername ? '' : 'has-error'}`}>\r\n          <label>Username:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n            className=\"form-control\"\r\n          />\r\n          {!isValidUsername && (\r\n            <small className=\"error-message\">Username must contain only alphanumeric characters.</small>\r\n          )}\r\n        </div>\r\n\r\n        <div className={`form-group ${isValidPassword ? '' : 'has-error'}`}>\r\n          <label>Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n            className=\"form-control\"\r\n          />\r\n          {!isValidPassword && (\r\n            <small className=\"error-message\">\r\n              Password must be at least 8 characters long and include letters and numbers.\r\n            </small>\r\n          )}\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAMa,oBA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"},"metadata":{},"sourceType":"module","externalDependencies":[]}