{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\Intern\\\\InsurnaceProject - ORG\\\\Insurance\\\\src\\\\components\\\\InsuranceForms\\\\SignInPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios'; // Import Axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInPage() {\n  _s();\n  const [fullName, setFullName] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessages, setErrorMessages] = useState({\n    fullName: '',\n    mobile: '',\n    email: '',\n    password: ''\n  });\n  const validateField = (fieldName, value, regex, errorMessage) => {\n    if (!value || regex && !regex.test(value)) {\n      setErrorMessages(prevErrors => ({\n        ...prevErrors,\n        [fieldName]: errorMessage\n      }));\n      return false;\n    } else {\n      setErrorMessages(prevErrors => ({\n        ...prevErrors,\n        [fieldName]: ''\n      }));\n      return true;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isValid = validateInputs();\n    if (isValid) {\n      axios.post('/signup', {\n        fullName,\n        mobile,\n        email,\n        password\n      }).then(response => {\n        console.log(response.data);\n        // Handle successful signup (e.g., redirect to dashboard)\n      }).catch(error => {\n        console.error('Signup failed:', error);\n        // Handle signup error (e.g., display error message to user)\n      });\n    } else {\n      console.log('Form submission failed. Please check the fields.');\n    }\n  };\n  const validateInputs = () => {\n    // Your validation logic\n    return true; // Return true for now since we're not changing the validation logic\n  };\n  const handleInputChange = (fieldName, value, regex, errorMessage) => {\n    // Your handleInputChange logic\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org1\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"forinner1 container\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success my-2\",\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInPage, \"pBj6gFzbq7nDdwB8Upk/BJcmnno=\");\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","SignInPage","_s","fullName","setFullName","mobile","setMobile","email","setEmail","password","setPassword","errorMessages","setErrorMessages","validateField","fieldName","value","regex","errorMessage","test","prevErrors","handleSubmit","e","preventDefault","isValid","validateInputs","post","then","response","console","log","data","catch","error","handleInputChange","className","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vijay/OneDrive/Desktop/Intern/InsurnaceProject - ORG/Insurance/src/components/InsuranceForms/SignInPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios'; // Import Axios for making HTTP requests\r\n\r\nfunction SignInPage() {\r\n  const [fullName, setFullName] = useState('');\r\n  const [mobile, setMobile] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    fullName: '',\r\n    mobile: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const validateField = (fieldName, value, regex, errorMessage) => {\r\n    if (!value || (regex && !regex.test(value))) {\r\n      setErrorMessages((prevErrors) => ({\r\n        ...prevErrors,\r\n        [fieldName]: errorMessage,\r\n      }));\r\n      return false;\r\n    } else {\r\n      setErrorMessages((prevErrors) => ({ ...prevErrors, [fieldName]: '' }));\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const isValid = validateInputs();\r\n\r\n    if (isValid) {\r\n      axios.post('/signup', { fullName, mobile, email, password })\r\n        .then(response => {\r\n          console.log(response.data);\r\n          // Handle successful signup (e.g., redirect to dashboard)\r\n        })\r\n        .catch(error => {\r\n          console.error('Signup failed:', error);\r\n          // Handle signup error (e.g., display error message to user)\r\n        });\r\n    } else {\r\n      console.log('Form submission failed. Please check the fields.');\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    // Your validation logic\r\n    return true; // Return true for now since we're not changing the validation logic\r\n  };\r\n\r\n  const handleInputChange = (fieldName, value, regex, errorMessage) => {\r\n    // Your handleInputChange logic\r\n  };\r\n\r\n  return (\r\n    <div className='org1'>\r\n      <form className='forinner1 container' onSubmit={handleSubmit}>\r\n        {/* Your form JSX */}\r\n        <button className='btn btn-success my-2' type='submit'>\r\n          Sign Up\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}