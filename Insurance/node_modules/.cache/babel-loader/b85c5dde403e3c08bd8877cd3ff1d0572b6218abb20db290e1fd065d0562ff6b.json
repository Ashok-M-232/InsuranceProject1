{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\Intern\\\\InsurnaceProject - ORG - Copy (4)\\\\Insurance\\\\src\\\\components\\\\ListOfPolicies\\\\TotalInfo.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // Import Axios library\nimport { useNavigate } from 'react-router-dom';\nimport './TotalInfo.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TotalInfo() {\n  _s();\n  const navigate = useNavigate();\n  const [FullNamePrefix, setFullNamePrefix] = useState('');\n  const [FullName, setFullName] = useState('');\n  const [PanCard, setPanCard] = useState('');\n  const [DateofBirth, setDateofBirth] = useState('');\n  const [FlatNo, setFlatNo] = useState('');\n  const [AreaStreet, setAreaStreet] = useState('');\n  const [FlatNo1, setFlatNo1] = useState('');\n  const [AreaStreet1, setAreaStreet1] = useState('');\n  const [pincode, setPincode] = useState('');\n  const [pincodee, setPincodee] = useState('');\n  const [IsCurrentAddress, setIsCurrentAddress] = useState('');\n  const [errorMessages, setErrorMessages] = useState({\n    FullName: '',\n    PanCard: '',\n    DateofBirth: '',\n    FlatNo: '',\n    AreaStreet: '',\n    CurrentAddress: '',\n    pincode: '',\n    pincodee: '',\n    AreaStreet1: ''\n  });\n  useEffect(() => {\n    // Retrieve form data from sessionStorage on component mount\n    const formData = JSON.parse(sessionStorage.getItem('totalInfoFormData'));\n    if (formData) {\n      setFullNamePrefix(formData.FullNamePrefix);\n      setFullName(formData.FullName);\n      setPanCard(formData.PanCard);\n      setDateofBirth(formData.DateofBirth);\n      setFlatNo(formData.FlatNo);\n      setAreaStreet(formData.AreaStreet);\n      setFlatNo1(formData.FlatNo1);\n      setAreaStreet1(formData.AreaStreet1);\n      setPincode(formData.pincode);\n      setPincodee(formData.pincodee);\n      setIsCurrentAddress(formData.IsCurrentAddress);\n    }\n  }, []);\n  const validateField = (fieldName, value, regex, errorMessage) => {\n    if (!regex.test(value)) {\n      setErrorMessages(prevErrors => ({\n        ...prevErrors,\n        [fieldName]: errorMessage\n      }));\n      return false;\n    } else {\n      setErrorMessages(prevErrors => ({\n        ...prevErrors,\n        [fieldName]: ''\n      }));\n      return true;\n    }\n  };\n  const validateInputs = () => {\n    const alphanumericRegex = /^[A-Za-z0-9\\s]+$/;\n    const panCardRegex = /^[A-Z]{5}[0-9]{4}[A-Z]$/;\n    const dateOfBirthRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\n    const pincodeRegex = /^\\d{6}$/;\n    let isValid = true;\n    isValid = isValid && validateField('FullName', FullName, alphanumericRegex, 'Please enter your full name.');\n    isValid = isValid && validateField('PanCard', PanCard, panCardRegex, 'Please enter a valid PanCard.');\n    isValid = isValid && validateField('DateofBirth', DateofBirth, dateOfBirthRegex, 'Please enter a valid date of birth.');\n    isValid = isValid && validateField('pincode', pincode, pincodeRegex, 'Please enter a valid pincode.');\n    isValid = isValid && validateField('FlatNo', FlatNo, alphanumericRegex, 'Please enter a valid flat number.');\n    isValid = isValid && validateField('AreaStreet', AreaStreet, alphanumericRegex, 'Please enter a valid area or street.');\n    if (IsCurrentAddress === 'no') {\n      isValid = isValid && validateField('pincodee', pincodee, pincodeRegex, 'Please enter a valid pincode.');\n      isValid = isValid && validateField('FlatNo1', FlatNo1, alphanumericRegex, 'Please enter a valid flat number.');\n      isValid = isValid && validateField('AreaStreet1', AreaStreet1, alphanumericRegex, 'Please enter a valid area or street.');\n    }\n    return isValid;\n  };\n  const handleInputChange = (fieldName, value, regex, errorMessage) => {\n    switch (fieldName) {\n      case 'FullNamePrefix':\n        setFullNamePrefix(value);\n        break;\n      case 'FullName':\n        setFullName(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'PanCard':\n        setPanCard(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'DateofBirth':\n        setDateofBirth(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'FlatNo':\n        setFlatNo(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'AreaStreet':\n        setAreaStreet(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'FlatNo1':\n        setFlatNo1(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'AreaStreet1':\n        setAreaStreet1(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'pincode':\n        setPincode(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'pincodee':\n        setPincodee(value);\n        validateField(fieldName, value, regex, errorMessage);\n        break;\n      case 'IsCurrentAddress':\n        setIsCurrentAddress(value);\n        break;\n      default:\n        break;\n    }\n\n    // Store updated input value in sessionStorage\n    sessionStorage.setItem('totalInfoFormData', JSON.stringify({\n      FullNamePrefix,\n      FullName,\n      PanCard,\n      DateofBirth,\n      FlatNo,\n      AreaStreet,\n      FlatNo1,\n      AreaStreet1,\n      pincode,\n      pincodee,\n      IsCurrentAddress\n    }));\n  };\n  const handleProceed = () => {\n    const isValid = validateInputs();\n    if (isValid) {\n      // Prepare data object to send to the backend API\n      const data = {\n        fullNamePrefix: FullNamePrefix,\n        fullName: FullName,\n        panCard: PanCard,\n        dateofBirth: DateofBirth,\n        flatNo: FlatNo,\n        areaStreet: AreaStreet,\n        flatNo1: FlatNo1,\n        areaStreet1: AreaStreet1,\n        pincode: pincode,\n        pincodee: pincodee,\n        isCurrentAddress: IsCurrentAddress\n      };\n\n      // Send POST request to the backend API\n      axios.post('http://localhost:9856/api/user-address/add', data).then(response => {\n        console.log('Data sent successfully:', response.data);\n        navigate('/payment');\n      }).catch(error => {\n        console.error('Error while sending data:', error);\n      });\n    } else {\n      console.log('Form submission failed. Please check the fields.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org12\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fill the details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forDispFlex\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fortablecls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forinner11d\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"forinner11 container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Enter PanCard details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success my-2\",\n            type: \"button\",\n            onClick: handleProceed,\n            children: \"Proceed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 190,\n    columnNumber: 5\n  }, this);\n}\n_s(TotalInfo, \"v8pVQWuQDOGX0NUXWH4nBfnITG8=\", false, function () {\n  return [useNavigate];\n});\n_c = TotalInfo;\nexport default TotalInfo;\nvar _c;\n$RefreshReg$(_c, \"TotalInfo\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","jsxDEV","_jsxDEV","TotalInfo","_s","navigate","FullNamePrefix","setFullNamePrefix","FullName","setFullName","PanCard","setPanCard","DateofBirth","setDateofBirth","FlatNo","setFlatNo","AreaStreet","setAreaStreet","FlatNo1","setFlatNo1","AreaStreet1","setAreaStreet1","pincode","setPincode","pincodee","setPincodee","IsCurrentAddress","setIsCurrentAddress","errorMessages","setErrorMessages","CurrentAddress","formData","JSON","parse","sessionStorage","getItem","validateField","fieldName","value","regex","errorMessage","test","prevErrors","validateInputs","alphanumericRegex","panCardRegex","dateOfBirthRegex","pincodeRegex","isValid","handleInputChange","setItem","stringify","handleProceed","data","fullNamePrefix","fullName","panCard","dateofBirth","flatNo","areaStreet","flatNo1","areaStreet1","isCurrentAddress","post","then","response","console","log","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vijay/OneDrive/Desktop/Intern/InsurnaceProject - ORG - Copy (4)/Insurance/src/components/ListOfPolicies/TotalInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios'; // Import Axios library\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport './TotalInfo.css';\r\n\r\nfunction TotalInfo() {\r\n  const navigate = useNavigate();\r\n\r\n  const [FullNamePrefix, setFullNamePrefix] = useState('');\r\n  const [FullName, setFullName] = useState('');\r\n  const [PanCard, setPanCard] = useState('');\r\n  const [DateofBirth, setDateofBirth] = useState('');\r\n  const [FlatNo, setFlatNo] = useState('');\r\n  const [AreaStreet, setAreaStreet] = useState('');\r\n  const [FlatNo1, setFlatNo1] = useState('');\r\n  const [AreaStreet1, setAreaStreet1] = useState('');\r\n  const [pincode, setPincode] = useState('');\r\n  const [pincodee, setPincodee] = useState('');\r\n  const [IsCurrentAddress, setIsCurrentAddress] = useState('');\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    FullName: '',\r\n    PanCard: '',\r\n    DateofBirth: '',\r\n    FlatNo: '',\r\n    AreaStreet: '',\r\n    CurrentAddress: '',\r\n    pincode: '',\r\n    pincodee: '',\r\n    AreaStreet1: '',\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Retrieve form data from sessionStorage on component mount\r\n    const formData = JSON.parse(sessionStorage.getItem('totalInfoFormData'));\r\n    if (formData) {\r\n      setFullNamePrefix(formData.FullNamePrefix);\r\n      setFullName(formData.FullName);\r\n      setPanCard(formData.PanCard);\r\n      setDateofBirth(formData.DateofBirth);\r\n      setFlatNo(formData.FlatNo);\r\n      setAreaStreet(formData.AreaStreet);\r\n      setFlatNo1(formData.FlatNo1);\r\n      setAreaStreet1(formData.AreaStreet1);\r\n      setPincode(formData.pincode);\r\n      setPincodee(formData.pincodee);\r\n      setIsCurrentAddress(formData.IsCurrentAddress);\r\n    }\r\n  }, []);\r\n\r\n  const validateField = (fieldName, value, regex, errorMessage) => {\r\n    if (!regex.test(value)) {\r\n      setErrorMessages((prevErrors) => ({\r\n        ...prevErrors,\r\n        [fieldName]: errorMessage,\r\n      }));\r\n      return false;\r\n    } else {\r\n      setErrorMessages((prevErrors) => ({ ...prevErrors, [fieldName]: '' }));\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const validateInputs = () => {\r\n    const alphanumericRegex = /^[A-Za-z0-9\\s]+$/;\r\n    const panCardRegex = /^[A-Z]{5}[0-9]{4}[A-Z]$/;\r\n    const dateOfBirthRegex = /^\\d{1,2}\\/\\d{1,2}\\/\\d{4}$/;\r\n    const pincodeRegex = /^\\d{6}$/;\r\n\r\n    let isValid = true;\r\n\r\n    isValid = isValid && validateField('FullName', FullName, alphanumericRegex, 'Please enter your full name.');\r\n    isValid = isValid && validateField('PanCard', PanCard, panCardRegex, 'Please enter a valid PanCard.');\r\n    isValid = isValid && validateField('DateofBirth', DateofBirth, dateOfBirthRegex, 'Please enter a valid date of birth.');\r\n    isValid = isValid && validateField('pincode', pincode, pincodeRegex, 'Please enter a valid pincode.');\r\n    isValid = isValid && validateField('FlatNo', FlatNo, alphanumericRegex, 'Please enter a valid flat number.');\r\n    isValid = isValid && validateField('AreaStreet', AreaStreet, alphanumericRegex, 'Please enter a valid area or street.');\r\n\r\n    if (IsCurrentAddress === 'no') {\r\n      isValid = isValid && validateField('pincodee', pincodee, pincodeRegex, 'Please enter a valid pincode.');\r\n      isValid = isValid && validateField('FlatNo1', FlatNo1, alphanumericRegex, 'Please enter a valid flat number.');\r\n      isValid = isValid && validateField('AreaStreet1', AreaStreet1, alphanumericRegex, 'Please enter a valid area or street.');\r\n    }\r\n\r\n    return isValid;\r\n  };\r\n\r\n  const handleInputChange = (fieldName, value, regex, errorMessage) => {\r\n    switch (fieldName) {\r\n      case 'FullNamePrefix':\r\n        setFullNamePrefix(value);\r\n        break;\r\n      case 'FullName':\r\n        setFullName(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'PanCard':\r\n        setPanCard(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'DateofBirth':\r\n        setDateofBirth(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'FlatNo':\r\n        setFlatNo(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'AreaStreet':\r\n        setAreaStreet(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'FlatNo1':\r\n        setFlatNo1(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'AreaStreet1':\r\n        setAreaStreet1(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'pincode':\r\n        setPincode(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'pincodee':\r\n        setPincodee(value);\r\n        validateField(fieldName, value, regex, errorMessage);\r\n        break;\r\n      case 'IsCurrentAddress':\r\n        setIsCurrentAddress(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // Store updated input value in sessionStorage\r\n    sessionStorage.setItem(\r\n      'totalInfoFormData',\r\n      JSON.stringify({\r\n        FullNamePrefix,\r\n        FullName,\r\n        PanCard,\r\n        DateofBirth,\r\n        FlatNo,\r\n        AreaStreet,\r\n        FlatNo1,\r\n        AreaStreet1,\r\n        pincode,\r\n        pincodee,\r\n        IsCurrentAddress,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleProceed = () => {\r\n    const isValid = validateInputs();\r\n\r\n    if (isValid) {\r\n      // Prepare data object to send to the backend API\r\n      const data = {\r\n        fullNamePrefix: FullNamePrefix,\r\n        fullName: FullName,\r\n        panCard: PanCard,\r\n        dateofBirth: DateofBirth,\r\n        flatNo: FlatNo,\r\n        areaStreet: AreaStreet,\r\n        flatNo1: FlatNo1,\r\n        areaStreet1: AreaStreet1,\r\n        pincode: pincode,\r\n        pincodee: pincodee,\r\n        isCurrentAddress: IsCurrentAddress,\r\n      };\r\n\r\n      // Send POST request to the backend API\r\n      axios\r\n        .post('http://localhost:9856/api/user-address/add', data)\r\n        .then((response) => {\r\n          console.log('Data sent successfully:', response.data);\r\n          navigate('/payment');\r\n        })\r\n        .catch((error) => {\r\n          console.error('Error while sending data:', error);\r\n        });\r\n    } else {\r\n      console.log('Form submission failed. Please check the fields.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='org12'>\r\n      <h2>Fill the details</h2>\r\n      <div className='forDispFlex'>\r\n        <div className='fortablecls'>\r\n          {/* User and Premium Data */}\r\n        </div>\r\n        <div className='forinner11d'>\r\n          <form className='forinner11 container'>\r\n            <h3>Enter PanCard details</h3>\r\n\r\n            {/* Input fields for user details */}\r\n\r\n            {/* Proceed button */}\r\n            <button className='btn btn-success my-2' type='button' onClick={handleProceed}>\r\n              Proceed\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TotalInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}