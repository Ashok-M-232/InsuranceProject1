{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\Intern\\\\InsurnaceProject - ORG - Copy (4)\\\\Insurance\\\\src\\\\components\\\\InsuranceForms\\\\PropertyContext.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\n\n// Create a new context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyContext = /*#__PURE__*/React.createContext();\n\n// Custom hook to consume the PropertyContext\nexport const usePropertyContext = () => {\n  _s();\n  const context = useContext(PropertyContext);\n  if (!context) {\n    throw new Error('usePropertyContext must be used within a PropertyContextProvider');\n  }\n  return context;\n};\n\n// PropertyContextProvider component to wrap your application and provide the context\n_s(usePropertyContext, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const PropertyContextProvider = ({\n  children\n}) => {\n  // Define your context values here\n  const propertyValue = ''; // Define your initial property value\n  const security24x7 = 'No'; // Define your initial security value\n  const buildingAge = '0'; // Define your initial building age value\n  const isSalaried = 'Yes'; // Define your initial isSalaried value\n\n  // You can add more context values if needed\n\n  return /*#__PURE__*/_jsxDEV(PropertyContext.Provider, {\n    value: {\n      propertyValue,\n      security24x7,\n      buildingAge,\n      isSalaried\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = PropertyContextProvider;\nvar _c;\n$RefreshReg$(_c, \"PropertyContextProvider\");","map":{"version":3,"names":["React","useContext","jsxDEV","_jsxDEV","PropertyContext","createContext","usePropertyContext","_s","context","Error","PropertyContextProvider","children","propertyValue","security24x7","buildingAge","isSalaried","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/vijay/OneDrive/Desktop/Intern/InsurnaceProject - ORG - Copy (4)/Insurance/src/components/InsuranceForms/PropertyContext.js"],"sourcesContent":["import React, { useContext } from 'react';\r\n\r\n// Create a new context\r\nconst PropertyContext = React.createContext();\r\n\r\n// Custom hook to consume the PropertyContext\r\nexport const usePropertyContext = () => {\r\n  const context = useContext(PropertyContext);\r\n  if (!context) {\r\n    throw new Error('usePropertyContext must be used within a PropertyContextProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\n// PropertyContextProvider component to wrap your application and provide the context\r\nexport const PropertyContextProvider = ({ children }) => {\r\n  // Define your context values here\r\n  const propertyValue = ''; // Define your initial property value\r\n  const security24x7 = 'No'; // Define your initial security value\r\n  const buildingAge = '0'; // Define your initial building age value\r\n  const isSalaried = 'Yes'; // Define your initial isSalaried value\r\n\r\n  // You can add more context values if needed\r\n\r\n  return (\r\n    <PropertyContext.Provider value={{ propertyValue, security24x7, buildingAge, isSalaried }}>\r\n      {children}\r\n    </PropertyContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,gBAAGJ,KAAK,CAACK,aAAa,CAAC,CAAC;;AAE7C;AACA,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAMC,OAAO,GAAGP,UAAU,CAACG,eAAe,CAAC;EAC3C,IAAI,CAACI,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,kEAAkE,CAAC;EACrF;EACA,OAAOD,OAAO;AAChB,CAAC;;AAED;AAAAD,EAAA,CARaD,kBAAkB;AAS/B,OAAO,MAAMI,uBAAuB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EACvD;EACA,MAAMC,aAAa,GAAG,EAAE,CAAC,CAAC;EAC1B,MAAMC,YAAY,GAAG,IAAI,CAAC,CAAC;EAC3B,MAAMC,WAAW,GAAG,GAAG,CAAC,CAAC;EACzB,MAAMC,UAAU,GAAG,KAAK,CAAC,CAAC;;EAE1B;;EAEA,oBACEZ,OAAA,CAACC,eAAe,CAACY,QAAQ;IAACC,KAAK,EAAE;MAAEL,aAAa;MAAEC,YAAY;MAAEC,WAAW;MAAEC;IAAW,CAAE;IAAAJ,QAAA,EACvFA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;AAACC,EAAA,GAdWZ,uBAAuB;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}