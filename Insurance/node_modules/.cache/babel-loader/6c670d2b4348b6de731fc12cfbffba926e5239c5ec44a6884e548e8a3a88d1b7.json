{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vijay\\\\OneDrive\\\\Desktop\\\\Intern\\\\InsurnaceProject\\\\Insurance\\\\src\\\\components\\\\InsuranceForms\\\\SignInPage.js\",\n  _s = $RefreshSig$();\n// Import necessary modules from React and React Router\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\n\n// Define the SignInPage component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SignInPage() {\n  _s();\n  // Get the history object from useHistory hook\n  const history = useHistory();\n\n  // Set up state variables for form inputs and error messages\n  const [FullName, setFullName] = useState('');\n  const [Mobile, setMobile] = useState('');\n  const [Email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessages, setErrorMessages] = useState({\n    FullName: '',\n    Mobile: '',\n    Email: '',\n    password: ''\n  });\n\n  // Function to handle form submission\n  const handleSubmit = e => {\n    e.preventDefault(); // Prevent form submission and page refresh\n\n    // Check if form inputs are valid\n    const isValid = validateInputs();\n    if (isValid) {\n      // Perform actions on successful form submission\n      console.log('Form submitted:', {\n        FullName,\n        Mobile,\n        Email,\n        password\n      });\n\n      // Navigate to the success page using history.push\n      history.push('/success');\n    } else {\n      console.log('Form submission failed. Please check the fields.');\n    }\n  };\n\n  // Function to validate form inputs\n  const validateInputs = () => {\n    // Define regular expressions for validation\n    const nameRegex = /^[a-zA-Z\\s]+$/;\n    const mobileRegex = /^[0-9]{10}$/;\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\n\n    // Initialize a flag for overall validation\n    let isValid = true;\n\n    // Function to validate a single field\n    const validateField = (fieldName, value, regex, errorMessage) => {\n      // Check if the value is empty or does not match the regular expression\n      if (!value || regex && !regex.test(value)) {\n        // Update the error messages and set the validation flag to false\n        setErrorMessages(prevErrors => ({\n          ...prevErrors,\n          [fieldName]: errorMessage\n        }));\n        isValid = false;\n      } else {\n        // Clear the error message for the field\n        setErrorMessages(prevErrors => ({\n          ...prevErrors,\n          [fieldName]: ''\n        }));\n      }\n    };\n\n    // Validate each field using the validateField function\n    validateField('FullName', FullName, nameRegex, 'Please enter a valid full name.');\n    validateField('Mobile', Mobile, mobileRegex, 'Please enter a valid 10-digit mobile number.');\n    validateField('Email', Email, emailRegex, 'Please enter a valid email address.');\n    validateField('password', password, passwordRegex, 'Password must be at least 8 characters, contain at least one letter, one number, and one special character.');\n\n    // Return the overall validation result\n    return isValid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"org\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"SignIn forher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), validateInputs() ?\n    /*#__PURE__*/\n    // Render Link if the form is valid\n    _jsxDEV(Link, {\n      to: \"/newpage\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success my-2\",\n        type: \"button\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Render the form if there are validation errors\n    _jsxDEV(\"form\", {\n      className: \"forinner container\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Full Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 30\n          }, this), \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"ex: FullName\",\n          value: FullName,\n          onChange: e => setFullName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessages.FullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Mobile \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 27\n          }, this), \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"ex: 9876543210\",\n          value: Mobile,\n          onChange: e => setMobile(e.target.value.slice(0, 10))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessages.Mobile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 26\n          }, this), \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          placeholder: \"ex: example@gmail.com\",\n          value: Email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessages.Email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password \", /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: 'red'\n            },\n            children: \"*\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this), \" :\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          placeholder: \"ex: Abc@123\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: errorMessages.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success my-2\",\n        type: \"submit\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(SignInPage, \"u25esLOSSUjyLpkOHZDDpWH2u9A=\", false, function () {\n  return [useHistory];\n});\n_c = SignInPage;\nexport default SignInPage;\nvar _c;\n$RefreshReg$(_c, \"SignInPage\");","map":{"version":3,"names":["React","useState","useHistory","jsxDEV","_jsxDEV","SignInPage","_s","history","FullName","setFullName","Mobile","setMobile","Email","setEmail","password","setPassword","errorMessages","setErrorMessages","handleSubmit","e","preventDefault","isValid","validateInputs","console","log","push","nameRegex","mobileRegex","emailRegex","passwordRegex","validateField","fieldName","value","regex","errorMessage","test","prevErrors","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Link","to","type","onSubmit","style","color","placeholder","onChange","target","slice","_c","$RefreshReg$"],"sources":["C:/Users/vijay/OneDrive/Desktop/Intern/InsurnaceProject/Insurance/src/components/InsuranceForms/SignInPage.js"],"sourcesContent":["// Import necessary modules from React and React Router\r\nimport React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// Define the SignInPage component\r\nfunction SignInPage() {\r\n  // Get the history object from useHistory hook\r\n  const history = useHistory();\r\n\r\n  // Set up state variables for form inputs and error messages\r\n  const [FullName, setFullName] = useState('');\r\n  const [Mobile, setMobile] = useState('');\r\n  const [Email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [errorMessages, setErrorMessages] = useState({\r\n    FullName: '',\r\n    Mobile: '',\r\n    Email: '',\r\n    password: '',\r\n  });\r\n\r\n  // Function to handle form submission\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent form submission and page refresh\r\n\r\n    // Check if form inputs are valid\r\n    const isValid = validateInputs();\r\n\r\n    if (isValid) {\r\n      // Perform actions on successful form submission\r\n      console.log('Form submitted:', {\r\n        FullName,\r\n        Mobile,\r\n        Email,\r\n        password,\r\n      });\r\n\r\n      // Navigate to the success page using history.push\r\n      history.push('/success');\r\n    } else {\r\n      console.log('Form submission failed. Please check the fields.');\r\n    }\r\n  };\r\n\r\n  // Function to validate form inputs\r\n  const validateInputs = () => {\r\n    // Define regular expressions for validation\r\n    const nameRegex = /^[a-zA-Z\\s]+$/;\r\n    const mobileRegex = /^[0-9]{10}$/;\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    const passwordRegex = /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/;\r\n\r\n    // Initialize a flag for overall validation\r\n    let isValid = true;\r\n\r\n    // Function to validate a single field\r\n    const validateField = (fieldName, value, regex, errorMessage) => {\r\n      // Check if the value is empty or does not match the regular expression\r\n      if (!value || (regex && !regex.test(value))) {\r\n        // Update the error messages and set the validation flag to false\r\n        setErrorMessages((prevErrors) => ({\r\n          ...prevErrors,\r\n          [fieldName]: errorMessage,\r\n        }));\r\n        isValid = false;\r\n      } else {\r\n        // Clear the error message for the field\r\n        setErrorMessages((prevErrors) => ({ ...prevErrors, [fieldName]: '' }));\r\n      }\r\n    };\r\n\r\n    // Validate each field using the validateField function\r\n    validateField('FullName', FullName, nameRegex, 'Please enter a valid full name.');\r\n    validateField('Mobile', Mobile, mobileRegex, 'Please enter a valid 10-digit mobile number.');\r\n    validateField('Email', Email, emailRegex, 'Please enter a valid email address.');\r\n    validateField(\r\n      'password',\r\n      password,\r\n      passwordRegex,\r\n      'Password must be at least 8 characters, contain at least one letter, one number, and one special character.'\r\n    );\r\n\r\n    // Return the overall validation result\r\n    return isValid;\r\n  };\r\n\r\n  return (\r\n    <div className='org'>\r\n      <h2>SignIn forher</h2>\r\n      {validateInputs() ? (\r\n        // Render Link if the form is valid\r\n        <Link to='/newpage'>\r\n          <button className='btn btn-success my-2' type='button'>\r\n            Sign In\r\n          </button>\r\n        </Link>\r\n      ) : (\r\n        // Render the form if there are validation errors\r\n        <form className='forinner container' onSubmit={handleSubmit}>\r\n          <div className='form-group'>\r\n            <label>Full Name <span style={{ color: 'red' }}>*</span> :</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='ex: FullName'\r\n              value={FullName}\r\n              onChange={(e) => setFullName(e.target.value)}\r\n            />\r\n            <p className='error-message'>{errorMessages.FullName}</p>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Mobile <span style={{ color: 'red' }}>*</span> :</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='ex: 9876543210'\r\n              value={Mobile}\r\n              onChange={(e) => setMobile(e.target.value.slice(0, 10))}\r\n            />\r\n            <p className='error-message'>{errorMessages.Mobile}</p>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Email <span style={{ color: 'red' }}>*</span> :</label>\r\n            <input\r\n              type='text'\r\n              className='form-control'\r\n              placeholder='ex: example@gmail.com'\r\n              value={Email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <p className='error-message'>{errorMessages.Email}</p>\r\n          </div>\r\n\r\n          <div className='form-group'>\r\n            <label>Password <span style={{ color: 'red' }}>*</span> :</label>\r\n            <input\r\n              type='password'\r\n              className='form-control'\r\n              placeholder='ex: Abc@123'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <p className='error-message'>{errorMessages.password}</p>\r\n          </div>\r\n\r\n          {/* Button to submit the form */}\r\n        <button className='btn btn-success my-2' type='submit'>\r\n          Sign In\r\n        </button>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}