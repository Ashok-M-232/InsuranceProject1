{"ast":null,"code":"// // Payment.jsx\n// import React, { useState } from 'react';\n// import Razorpay from 'razorpay';\n\n// const PaymentComponent = () => {\n//   const [payment, setPayment] = useState(null);\n\n//   const options = {\n//     key: 'YOUR_RAZORPAY_KEY',\n//     amount: 10000, // amount in paise (100 paise = 1 INR)\n//     currency: 'INR',\n//     name: 'Your Company Name',\n//     description: 'Payment for your product/service',\n//     image: 'your_logo_url',\n//     order_id: payment ? payment.id : '',\n//     handler: (response) => {\n//       alert(response.razorpay_payment_id);\n//       alert(response.razorpay_order_id);\n//       alert(response.razorpay_signature);\n//     },\n//     prefill: {\n//       name: 'John Doe',\n//       email: 'john@example.com',\n//       contact: '9876543210',\n//     },\n//     notes: {\n//       address: 'Your Company Address',\n//     },\n//     theme: {\n//       color: '#3399cc',\n//     },\n//   };\n\n//   const openRazorpay = () => {\n//     const razorpayInstance = new Razorpay(options);\n//     razorpayInstance.open();\n//   };\n\n//   const createOrder = async () => {\n//     // Make an API call to your server to create a Razorpay order\n//     const response = await fetch('YOUR_SERVER_API_ENDPOINT', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         amount: options.amount,\n//         currency: options.currency,\n//       }),\n//     });\n\n//     const orderData = await response.json();\n//     setPayment(orderData);\n\n//     // Once the order is created, open the Razorpay payment modal\n//     openRazorpay();\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={createOrder}>Pay with Razorpay</button>\n//     </div>\n//   );\n// };\n\n// export default Payment;","map":{"version":3,"names":[],"sources":["C:/Users/vijay/OneDrive/Desktop/Intern/InsurnaceProject - Copy - Copy/Insurance/src/payment/Payment.js"],"sourcesContent":["// // Payment.jsx\r\n// import React, { useState } from 'react';\r\n// import Razorpay from 'razorpay';\r\n\r\n// const PaymentComponent = () => {\r\n//   const [payment, setPayment] = useState(null);\r\n\r\n//   const options = {\r\n//     key: 'YOUR_RAZORPAY_KEY',\r\n//     amount: 10000, // amount in paise (100 paise = 1 INR)\r\n//     currency: 'INR',\r\n//     name: 'Your Company Name',\r\n//     description: 'Payment for your product/service',\r\n//     image: 'your_logo_url',\r\n//     order_id: payment ? payment.id : '',\r\n//     handler: (response) => {\r\n//       alert(response.razorpay_payment_id);\r\n//       alert(response.razorpay_order_id);\r\n//       alert(response.razorpay_signature);\r\n//     },\r\n//     prefill: {\r\n//       name: 'John Doe',\r\n//       email: 'john@example.com',\r\n//       contact: '9876543210',\r\n//     },\r\n//     notes: {\r\n//       address: 'Your Company Address',\r\n//     },\r\n//     theme: {\r\n//       color: '#3399cc',\r\n//     },\r\n//   };\r\n\r\n//   const openRazorpay = () => {\r\n//     const razorpayInstance = new Razorpay(options);\r\n//     razorpayInstance.open();\r\n//   };\r\n\r\n//   const createOrder = async () => {\r\n//     // Make an API call to your server to create a Razorpay order\r\n//     const response = await fetch('YOUR_SERVER_API_ENDPOINT', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         amount: options.amount,\r\n//         currency: options.currency,\r\n//       }),\r\n//     });\r\n\r\n//     const orderData = await response.json();\r\n//     setPayment(orderData);\r\n\r\n//     // Once the order is created, open the Razorpay payment modal\r\n//     openRazorpay();\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <button onClick={createOrder}>Pay with Razorpay</button>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Payment;\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}